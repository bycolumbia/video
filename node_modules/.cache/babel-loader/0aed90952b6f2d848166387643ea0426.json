{"ast":null,"code":"var _jsxFileName = \"/home/bamberg/VSL-Generator/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport image from './images/GERADOR_DE.png';\nimport pptxgen from \"pptxgenjs\";\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [message, setMessage] = useState('');\n\n  const handleMessageChange = event => {\n    // 👇️ access textarea value\n    setMessage(event.target.value);\n  };\n\n  const generate = () => {\n    let pptx = new pptxgen();\n    const format = message.split('\\n'); // escolher outros tamanhos 9:16 e 4:3 (muito provavel que tenha que configurar outras variaveis de x,y,w e h)\n\n    format.forEach(element => {\n      pptx.defineLayout({\n        name: 'A3',\n        width: 16,\n        height: 9\n      });\n      pptx.layout = 'A3';\n      let slide = pptx.addSlide();\n      slide.background = {\n        color: \"#ffffff\"\n      }; // cor do fundo do slide\n      // separar igual ao phyton, uma config para a caixa e outra para o texto, tenta criar a caixa e dps add o texto\n\n      slide.addText(element, {\n        x: 1.6,\n        // esquerda para direite\n        y: 4,\n        // de cima pra baixo\n        w: \"80%\",\n        h: 1,\n        fontSize: 36,\n        align: \"center\",\n        color: \"#000000\",\n        fontFace: 'Open Sans'\n      });\n    });\n    pptx.writeFile();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"img-fluid\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: image,\n        alt: \"imagem\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"area-texto\",\n      children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n        onChange: handleMessageChange,\n        rows: 17,\n        cols: 100,\n        children: `${message}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"area-buttons\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: generate,\n        children: \"Gerar VSL\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: \"footter-content\",\n      children: \"Gerador de VSL @Copyright 2022\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"l8KXAebGu4sZHsyCIQX7P8si41w=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["image","pptxgen","React","useState","App","message","setMessage","handleMessageChange","event","target","value","generate","pptx","format","split","forEach","element","defineLayout","name","width","height","layout","slide","addSlide","background","color","addText","x","y","w","h","fontSize","align","fontFace","writeFile"],"sources":["/home/bamberg/VSL-Generator/src/App.tsx"],"sourcesContent":["import './App.css';\nimport image from './images/GERADOR_DE.png'\nimport pptxgen from \"pptxgenjs\";\nimport React, { useState } from 'react';\n\nfunction App() {\n\n  const [message, setMessage] = useState('');\n\n  const handleMessageChange = event => {\n    // 👇️ access textarea value\n    setMessage(event.target.value);\n  };\n\n  const generate = () => {\n    let pptx = new pptxgen()\n\n\n    const format = message.split('\\n')\n\n// escolher outros tamanhos 9:16 e 4:3 (muito provavel que tenha que configurar outras variaveis de x,y,w e h)\n\n    format.forEach(element => {\n      pptx.defineLayout({ name:'A3', width: 16, height: 9 });\n      pptx.layout = 'A3'\n      let slide = pptx.addSlide();\n\n      slide.background = { color: \"#ffffff\" }; // cor do fundo do slide\n      \n      // separar igual ao phyton, uma config para a caixa e outra para o texto, tenta criar a caixa e dps add o texto\n      \n     \n  slide.addText(element,\n    { x: 1.6, // esquerda para direite\n      y: 4, // de cima pra baixo\n      w: \"80%\",\n    h: 1,\n    fontSize: 36,\n    align: \"center\",\n    color: \"#000000\",\n    fontFace:'Open Sans' \n  });\n    })\n\n    pptx.writeFile()\n}\n  return (\n    <div>\n        <div className=\"img-fluid\">\n            <img src={image} alt='imagem' />\n      </div>\n    <div className=\"area-texto\">\n        <textarea onChange={handleMessageChange} rows={17} cols={100}>\n          {`${message}`}\n        </textarea>\n    </div>\n    <div className=\"area-buttons\">\n        <button onClick={generate}>Gerar VSL</button> \n    </div>\n    <footer className=\"footter-content\">Gerador de VSL @Copyright 2022</footer>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,MAAkB,yBAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EAEb,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBH,QAAQ,CAAC,EAAD,CAAtC;;EAEA,MAAMI,mBAAmB,GAAGC,KAAK,IAAI;IACnC;IACAF,UAAU,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAV;EACD,CAHD;;EAKA,MAAMC,QAAQ,GAAG,MAAM;IACrB,IAAIC,IAAI,GAAG,IAAIX,OAAJ,EAAX;IAGA,MAAMY,MAAM,GAAGR,OAAO,CAACS,KAAR,CAAc,IAAd,CAAf,CAJqB,CAMzB;;IAEID,MAAM,CAACE,OAAP,CAAeC,OAAO,IAAI;MACxBJ,IAAI,CAACK,YAAL,CAAkB;QAAEC,IAAI,EAAC,IAAP;QAAaC,KAAK,EAAE,EAApB;QAAwBC,MAAM,EAAE;MAAhC,CAAlB;MACAR,IAAI,CAACS,MAAL,GAAc,IAAd;MACA,IAAIC,KAAK,GAAGV,IAAI,CAACW,QAAL,EAAZ;MAEAD,KAAK,CAACE,UAAN,GAAmB;QAAEC,KAAK,EAAE;MAAT,CAAnB,CALwB,CAKiB;MAEzC;;MAGJH,KAAK,CAACI,OAAN,CAAcV,OAAd,EACE;QAAEW,CAAC,EAAE,GAAL;QAAU;QACRC,CAAC,EAAE,CADL;QACQ;QACNC,CAAC,EAAE,KAFL;QAGAC,CAAC,EAAE,CAHH;QAIAC,QAAQ,EAAE,EAJV;QAKAC,KAAK,EAAE,QALP;QAMAP,KAAK,EAAE,SANP;QAOAQ,QAAQ,EAAC;MAPT,CADF;IAUG,CApBD;IAsBArB,IAAI,CAACsB,SAAL;EACH,CA/BC;;EAgCA,oBACE;IAAA,wBACI;MAAK,SAAS,EAAC,WAAf;MAAA,uBACI;QAAK,GAAG,EAAElC,KAAV;QAAiB,GAAG,EAAC;MAArB;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA,QADJ,eAIA;MAAK,SAAS,EAAC,YAAf;MAAA,uBACI;QAAU,QAAQ,EAAEO,mBAApB;QAAyC,IAAI,EAAE,EAA/C;QAAmD,IAAI,EAAE,GAAzD;QAAA,UACI,GAAEF,OAAQ;MADd;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA,QAJA,eASA;MAAK,SAAS,EAAC,cAAf;MAAA,uBACI;QAAQ,OAAO,EAAEM,QAAjB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA,QATA,eAYA;MAAQ,SAAS,EAAC,iBAAlB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAZA;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAgBD;;GAzDQP,G;;KAAAA,G;AA2DT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}