{"ast":null,"code":"var _jsxFileName = \"/home/bamberg/VSL-Generator/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport image from './images/GERADOR_DE.png';\nimport pptxgen from \"pptxgenjs\";\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [message, setMessage] = useState('');\n  const [color, setColor] = useState('');\n  const [backGroundColor, setBackGroundColor] = useState('');\n\n  const handleMessageChange = event => {\n    setMessage(event.target.value);\n  };\n\n  const handleColorChange = event => {\n    setColor(event.target.value);\n  };\n\n  const handleBackGroundChange = event => {\n    setBackGroundColor(event.target.value);\n    console.log(backGroundColor);\n  };\n\n  const generate = () => {\n    let pptx = new pptxgen();\n    const format = message.split('\\n'); // escolher outros tamanhos 9:16 e 4:3 (muito provavel que tenha que configurar outras variaveis de x,y,w e h)\n\n    format.forEach(element => {\n      pptx.defineLayout({\n        name: 'A3',\n        width: 16,\n        height: 9\n      });\n      pptx.layout = 'A3';\n      let slide = pptx.addSlide();\n      slide.background = {\n        color: backGroundColor\n      }; // cor do fundo do slide\n      // separar igual ao phyton, uma config para a caixa e outra para o texto, tenta criar a caixa e dps add o texto\n\n      slide.addText(element, {\n        x: 1.6,\n        // esquerda para direite\n        y: 4,\n        // de cima pra baixo\n        w: \"80%\",\n        h: 1,\n        fontSize: 36,\n        align: \"center\",\n        color: color,\n        fontFace: 'Open Sans'\n      });\n    });\n    pptx.writeFile();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"img-fluid\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: image,\n        alt: \"imagem\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"area-texto\",\n      children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n        onChange: handleMessageChange,\n        placeholder: `Quebre sua copy em linhas (Não deixe linhas brancas), cada linha vai ser um slide, simples assim :D !`,\n        rows: 17,\n        cols: 100,\n        children: `${message}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"area-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"span-text\",\n        children: \"Cor do texto:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"color\",\n        id: \"favcolor\",\n        name: \"favcolor\",\n        onChange: handleColorChange,\n        value: color\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"span-text\",\n        children: \"Cor do slide:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"color\",\n        id: \"favcolor\",\n        name: \"favcolor\",\n        onChange: handleBackGroundChange,\n        value: backGroundColor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"generation-button\",\n        onClick: generate,\n        children: \"Gerar VSL\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: \"footter-content\",\n      children: \"Gerador de VSL @Copyright 2022\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"h6ZOf9DcLTJcX3OPtq2UlvHjXno=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["image","pptxgen","React","useState","App","message","setMessage","color","setColor","backGroundColor","setBackGroundColor","handleMessageChange","event","target","value","handleColorChange","handleBackGroundChange","console","log","generate","pptx","format","split","forEach","element","defineLayout","name","width","height","layout","slide","addSlide","background","addText","x","y","w","h","fontSize","align","fontFace","writeFile"],"sources":["/home/bamberg/VSL-Generator/src/App.tsx"],"sourcesContent":["import './App.css';\nimport image from './images/GERADOR_DE.png'\nimport pptxgen from \"pptxgenjs\";\nimport React, { useState } from 'react';\n\nfunction App() {\n\n  const [message, setMessage] = useState('');\n  const [color, setColor] = useState('');\n  const [backGroundColor, setBackGroundColor] = useState('');\n\n  const handleMessageChange = event => {\n    setMessage(event.target.value);\n  };\n\n  const handleColorChange = event => {\n    setColor(event.target.value);\n  };\n  \n  const handleBackGroundChange = event => {\n    setBackGroundColor(event.target.value);\n    console.log(backGroundColor)\n  };\n\n  const generate = () => {\n    let pptx = new pptxgen()\n\n\n    const format = message.split('\\n')\n\n// escolher outros tamanhos 9:16 e 4:3 (muito provavel que tenha que configurar outras variaveis de x,y,w e h)\n\n    format.forEach(element => {\n      pptx.defineLayout({ name:'A3', width: 16, height: 9 });\n      pptx.layout = 'A3'\n      let slide = pptx.addSlide();\n\n      slide.background = { color: backGroundColor }; // cor do fundo do slide\n      \n      // separar igual ao phyton, uma config para a caixa e outra para o texto, tenta criar a caixa e dps add o texto\n      \n     \n  slide.addText(element,\n    { x: 1.6, // esquerda para direite\n      y: 4, // de cima pra baixo\n      w: \"80%\",\n    h: 1,\n    fontSize: 36,\n    align: \"center\",\n    color: color,\n    fontFace:'Open Sans' \n  });\n    })\n\n    pptx.writeFile()\n}\n  return (\n    <div>\n        <div className=\"img-fluid\">\n            <img src={image} alt='imagem' />\n      </div>\n    <div className=\"area-texto\">\n        <textarea \n        onChange={handleMessageChange} \n        placeholder={`Quebre sua copy em linhas (Não deixe linhas brancas), cada linha vai ser um slide, simples assim :D !`} \n        rows={17} \n        cols={100}>\n          {`${message}`}\n        </textarea>\n    </div>\n    <div className=\"area-buttons\">\n        <span className='span-text'>Cor do texto:</span>\n        <input type=\"color\" id=\"favcolor\" name=\"favcolor\" onChange={handleColorChange} value={color} />\n        <span className='span-text'>Cor do slide:</span>\n        <input type=\"color\" id=\"favcolor\" name=\"favcolor\" onChange={handleBackGroundChange} value={backGroundColor} />\n      <button className='generation-button' onClick={generate}>Gerar VSL</button> \n    </div>\n    <footer className=\"footter-content\">Gerador de VSL @Copyright 2022</footer>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}